stages:         
  - prepare
  - build

image: node:20

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
  policy: pull-push

before_script:
  - yarn install --frozen-lockfile

eslint:
  stage: prepare
  script:
    - yarn lint
  except:
    - tags
    
unit-test:
  stage: prepare
  script:
    - yarn test
  except:
    - tags

build-apk:
  stage: build
  script:
    # Install required dependencies and Android SDK
    - apt-get update && apt-get install -y curl unzip openjdk-17-jdk
    # Create required directories for Android SDK
    - mkdir -p /opt/android-sdk/cmdline-tools
    # Download and extract Android command line tools
    - curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o cmdtools.zip
    - unzip -o cmdtools.zip -d /opt/android-sdk/cmdline-tools
    - rm cmdtools.zip
    # Set environment variables
    - export ANDROID_HOME=/opt/android-sdk
    - export PATH=$ANDROID_HOME/cmdline-tools/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH
    # Accept licenses and install required components
    - yes | sdkmanager --licenses || true
    - sdkmanager "platform-tools" "build-tools;33.0.0" "platforms;android-33"
    # Load environment variables and build APK
    - echo "$ENV_FILE" > .env
    - EXPO_TOKEN=$EAS_TOKEN yarn build:android
  artifacts:
    paths:
      - build-*.apk
  only:
    - tags

release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: build
  before_script: []
  script:
    - apk add --no-cache curl
    - |
      curl -H "Content-Type: application/json" \
           -d '{"content": "ðŸš€ Release Zuck-my-clothe application !"}' \
           $DISCORD_WEBHOOK
  only:
    - tags
  dependencies:
    - build-apk
  needs:
    - build-apk
  artifacts:
    paths:
      - build-*.apk
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "Release of version $CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    assets:
      links:
        - name: "Download APK"
          url: "${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/download"